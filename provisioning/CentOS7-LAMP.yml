---
- hosts: all
  become: yes
  tasks:
    - name: 'Packages: Install'
      yum: name={{ item }} state=latest
      with_items:
        - httpd
        - php
        - php-mysql
        - mariadb-server
        - pwgen
        - policycoreutils-python

    - name: 'Packages: Configure'
      ini_file:
        dest: /etc/php.ini
        section: PHP
        option: cgi.fix_pathinfo
        value: 0
        state: present

    - name: 'Services: Start and Enable'
      systemd: name={{ item }} state=started enabled=yes masked=no
      with_items:
        - firewalld
        - httpd
        - mariadb

    - name: 'Firewall: Open http'
      firewalld:
        service: http
        permanent: true
        state: enabled
        immediate: yes

    - name: 'DocumentRoot: Permissions'
      file:
        path: /var/www/html/
        owner: root
        group: apache
        mode: 'u=rwX,g=rwX,o=rX'
        setype: httpd_sys_rw_content_t
        recurse: yes

    - name: 'SELinux: Context'
      sefcontext:
        target: '/var/www/html(/.*)?'
        setype: httpd_sys_rw_content_t
        state: present
        

    - name: 'Test File: test.php'
      blockinfile:
        dest: /var/www/html/test.php
        block: |
          <?php
              phpinfo();
          ?>
        create: yes
        marker: <!-- {mark} ANSIBLE MANAGED BLOCK -->

    - name: 'MySQL: Generate new root password'
      command: pwgen -B1ns 24
      register: mysqlrootpass

    - name: 'MySQL: mysql_secure_installation'
      command: >
        mysql -e '
        UPDATE `mysql`.`user` SET `Password`=PASSWORD("{{ mysqlrootpass.stdout }}") WHERE `User`="root";
        DELETE FROM `mysql`.`user` WHERE User="";
        DELETE FROM `mysql`.`user` WHERE `User`="root" AND `Host` NOT IN ("localhost", "127.0.0.1", "::1");
        DROP DATABASE IF EXISTS `test`;
        DELETE FROM `mysql`.`db` WHERE `Db`="test" OR `Db`="test\\_%";
        FLUSH PRIVILEGES;
        '
    - name: 'MySQL: Update /root/.my.cnf'
      blockinfile:
        dest: /root/.my.cnf
        block: |
          [client]
          user=root
          password={{ mysqlrootpass.stdout }}
        create: yes
        owner: root
        group: root
        mode: 0600

